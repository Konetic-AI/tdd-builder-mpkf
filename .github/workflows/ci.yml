name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    env:
      SCHEMA_DRIVEN_ONBOARDING: false
      EXPORT_PATH: ./exports
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Run tests
        run: npm test
      
      - name: Run Jest tests
        run: npm run test:jest
      
      - name: Generate coverage report
        run: npm run test:jest -- --coverage
        continue-on-error: true
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        continue-on-error: true
        if: secrets.CODECOV_TOKEN != ''
      
      - name: Upload exports
        uses: actions/upload-artifact@v4
        with:
          name: tdd-exports-node-${{ matrix.node-version }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            exports/**
            output/**
          if-no-files-found: warn
        if: always()
      
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-node-${{ matrix.node-version }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: coverage/
          if-no-files-found: warn
        if: always()

  # Optional: Verify schema-driven mode compiles
  test-schema-mode:
    runs-on: ubuntu-latest
    
    env:
      SCHEMA_DRIVEN_ONBOARDING: true
      EXPORT_PATH: ./exports
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Verify schema mode compiles
        run: node -e "console.log('Schema mode verification passed')"
